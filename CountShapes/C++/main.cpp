/*
Part of the ShapeCounter project, which counts all possible triangles and
(convex) quadrilaterals from geometric figures traversed by a number of lines.

See the tested figures in '../TestFigures/'.

Requires Boost installation (www.boost.org).

Project compiled with g++ 5.4.0:
	g++ -I "Path_to_Boost_install_folder" -std=c++14 -fopenmp -Ofast -Wall -o countShapes
		"../../common/util.cpp" shapeCounter.cpp shapeCounter_SeqVsOpenMP.cpp main.cpp

@2017 Florin Tulba (florintulba@yahoo.com)
*/

#include "../../common/util.h"
#include "shapeCounter.h"

#include <iostream>
#include <sstream>
#include <fstream>
#include <algorithm>
#include <iterator>

using namespace std;

int main() {
	// Select one of the following scenario files (uncommenting it and commenting the others)
	// or create a new scenario and open your own file:

	// Scenario from figure 'count6Shapes.png'
	const string testFileName = "../TestFigures/TextVersions/count6shapes.txt";		// Manually generated (same labels as in the corresponding figure)
	//const string testFileName = "../TestFigures/TextVersions/count6shapes.png.txt";	// Generated by the figure interpreter written in Matlab/Octave

	// Scenario from figure 'count9Shapes.png'
	//const string testFileName = "../TestFigures/TextVersions/count9shapes.txt";		// Manually generated (same labels as in the corresponding figure)
	//const string testFileName = "../TestFigures/TextVersions/count9shapes.png.txt";	// Generated by the figure interpreter written in Matlab/Octave

	// Scenario from figure 'count100Shapes.png'
	//const string testFileName = "../TestFigures/TextVersions/count100shapes.txt";	// Manually generated (same labels as in the corresponding figure)
	//const string testFileName = "../TestFigures/TextVersions/count100shapes.png.txt";// Generated by the figure interpreter written in Matlab/Octave

	// Scenario from figure 'count673Shapes.png'
	//const string testFileName = "../TestFigures/TextVersions/count673shapes.txt";	// Manually generated (same labels as in the corresponding figure)
	//const string testFileName = "../TestFigures/TextVersions/count673shapes.png.txt";// Generated by the figure interpreter written in Matlab/Octave

	// Scenario from figure 'count25651Shapes.png'
	//const string testFileName = "../TestFigures/TextVersions/count25651shapes.png.txt";// Generated by the figure interpreter written in Matlab/Octave

	ifstream ifs(testFileName);
	if( ! ifs) {
		cerr<<"Couldn't open file '"<<testFileName<<'\''<<endl;
		return -1;
	}

	vector<vector<string>> lines;
	string line;
	while(nextRelevantLine(ifs, line)) {
		istringstream iss(line);
		lines.emplace_back(istream_iterator<string>(iss), istream_iterator<string>());
	}

	ifs.close();

	ShapeCounter sc(lines);

	enum {REPETITIONS = 100};
	size_t totalShapes;
	{
		Timer t("Counting shapes sequentially", REPETITIONS);
		for(int i = 0; i < REPETITIONS; ++i)
			sc.process();
	}
	totalShapes = sc.triangles() + sc.convexQuadrilaterals();
	cout<<"There are "<<sc.triangles()<<" triangles and "<<sc.convexQuadrilaterals()
		<<" convex quadrilaterals, which means "<<totalShapes<<" convex shapes in total."<<endl<<endl;

	{
		Timer t("Counting shapes with OpenMP", REPETITIONS);
		for(int i = 0; i < REPETITIONS; ++i)
			sc.process_OpenMP();
	}
	totalShapes = sc.triangles() + sc.convexQuadrilaterals();
	cout<<"There are "<<sc.triangles()<<" triangles and "<<sc.convexQuadrilaterals()
		<<" convex quadrilaterals, which means "<<totalShapes<<" convex shapes in total."<<endl<<endl;

	return 0;
}

